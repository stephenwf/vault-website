// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

// export type Image = string
export type { Markdown, MDX }

/** Document types */
export type Docs = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Docs'
  /** The title of the documentation */
  title: string
  /** The folder the documentation is in */
  folder?: string | undefined
  /** Wether this feature a future feature */
  future: boolean
  /** Should this be hidden from the side navigation */
  hide_navigation: boolean
  /** Markdown file body */
  body: Markdown
  filename: string
  url: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Docs
export type DocumentTypeNames = 'Docs'

export type NestedTypes = never
export type NestedTypeNames = never


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Docs: Docs
}

export type NestedTypeMap = {

}

 